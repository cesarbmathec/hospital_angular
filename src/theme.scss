@use "sass:map";
@use "@angular/material" as mat;

$theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$cyan-palette,
    ),
  )
);

@include mat.core();
@include mat.color-variants-backwards-compatibility($theme);

@mixin color($theme) {
  .my-button {
    padding: 6px;
    font-size: 14pt;
  }
  a.my-button {
    // Read the 50 hue from the primary color palette.
    color: rgb(
      219,
      219,
      255
    ); // mat.get-theme-color($theme, surface-container-high);
    background-color: rgb(0, 139, 128);
    padding: 6px;
    font-size: 14pt;
  }
  .botton-icon-warn {
    color: rgb(209, 137, 3);
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.253);
    background-color: rgb(253, 249, 234);
  }
  .botton-icon-danger {
    color: #ba1a1a;
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.253);
    background-color: rgb(253, 234, 234);
  }
  .botton-icon-primary {
    color: #067b9e;
    background-color: rgb(225, 248, 248);
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.253);
  }
  .mat-toolbar-custom {
    background: mat.get-theme-color($theme, primary);
  }
}

@mixin theme($theme) {
  @if mat.theme-has($theme, color) {
    @include color($theme);
  }
}
:root {
  @include theme($theme);
  @include mat.core-theme($theme);
  @include mat.all-component-themes($theme);
}
